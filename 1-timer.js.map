{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst datetimePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysValue = document.querySelector('[data-days]');\nconst hoursValue = document.querySelector('[data-hours]');\nconst minutesValue = document.querySelector('[data-minutes]');\nconst secondsValue = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\nlet timerInterval;\n\nstartButton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(datetimePicker, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateTimer() {\n  const timeDifference = userSelectedDate - new Date();\n  if (timeDifference <= 0) {\n    clearInterval(timerInterval);\n    datetimePicker.disabled = false;\n    daysValue.textContent = '00';\n    hoursValue.textContent = '00';\n    minutesValue.textContent = '00';\n    secondsValue.textContent = '00';\n    return;\n  }\n  const { days, hours, minutes, seconds } = convertMs(timeDifference);\n  daysValue.textContent = String(days).padStart(2, '0');\n  hoursValue.textContent = addLeadingZero(hours);\n  minutesValue.textContent = addLeadingZero(minutes);\n  secondsValue.textContent = addLeadingZero(seconds);\n}\n\nstartButton.addEventListener('click', () => {\n  datetimePicker.disabled = true;\n  startButton.disabled = true;\n  updateTimer();\n  timerInterval = setInterval(updateTimer, 1000);\n});\n"],"names":["datetimePicker","startButton","daysValue","hoursValue","minutesValue","secondsValue","userSelectedDate","timerInterval","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimer","timeDifference"],"mappings":"2GAKA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE5D,IAAIC,EACAC,EAEJN,EAAY,SAAW,GAEvB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAC9BH,GAAoB,IAAI,MAC1BI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDT,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAEAU,EAAUX,EAAgBQ,CAAO,EAEjC,SAASI,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC1C,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,GAAc,CACrB,MAAMC,EAAiBf,EAAmB,IAAI,KAC9C,GAAIe,GAAkB,EAAG,CACvB,cAAcd,CAAa,EAC3BP,EAAe,SAAW,GAC1BE,EAAU,YAAc,KACxBC,EAAW,YAAc,KACzBC,EAAa,YAAc,KAC3BC,EAAa,YAAc,KAC3B,MACJ,CACE,KAAM,CAAE,KAAAS,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGL,EAAUS,CAAc,EAClEnB,EAAU,YAAc,OAAOY,CAAI,EAAE,SAAS,EAAG,GAAG,EACpDX,EAAW,YAAce,EAAeH,CAAK,EAC7CX,EAAa,YAAcc,EAAeF,CAAO,EACjDX,EAAa,YAAca,EAAeD,CAAO,CACnD,CAEAhB,EAAY,iBAAiB,QAAS,IAAM,CAC1CD,EAAe,SAAW,GAC1BC,EAAY,SAAW,GACvBmB,EAAa,EACbb,EAAgB,YAAYa,EAAa,GAAI,CAC/C,CAAC"}